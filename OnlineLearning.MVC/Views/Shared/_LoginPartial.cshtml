@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);

        if (currentUser != null)
        {
            if (currentUser.ProfilePicture != null)
            {
                <li class="nav-item">
                    <img class="avatar rounded-circle" style="height: 40px; width: 40px; object-fit: cover;" alt="profile" src="data:image/*;base64,@(Convert.ToBase64String(currentUser.ProfilePicture))" />
                </li>
            }

            <li class="nav-item">
                <a class="nav-link  text-primary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                    Hello @currentUser.FullName!
                </a>
            </li>
        }

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-primary">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link  text-primary" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link  text-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
